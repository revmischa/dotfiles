# Zsh configuration managed by chezmoi
# Path to oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load
ZSH_THEME=""  # We use Starship instead

# History configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_VERIFY
setopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE

# Options
setopt AUTO_CD              # Change to directory without cd
setopt GLOB_DOTS            # Include dotfiles in globbing
setopt EXTENDED_GLOB        # Extended globbing
setopt NO_BEEP              # No beeping
setopt PROMPT_SUBST         # Allow parameter expansion in prompts

# Completion system
autoload -Uz compinit
compinit

# Case-insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# Oh-My-Zsh plugins
plugins=(
    git
    docker
    kubectl
    npm
    yarn
    pip
    poetry
    rust
    golang
    aws
    zsh-autosuggestions
    zsh-syntax-highlighting
)

# Load Oh-My-Zsh if it exists
[[ -f "$ZSH/oh-my-zsh.sh" ]] && source "$ZSH/oh-my-zsh.sh"

# Load aliases
[[ -f "$HOME/.aliases" ]] && source "$HOME/.aliases"

# Load local configuration
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"

# Environment variables
export EDITOR="nvim"
export VISUAL="$EDITOR"
export PAGER="less"
export LESS="-R"

# Development paths
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/bin:$PATH"

{{- if .isMacOS }}
# macOS specific configuration
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/usr/local/bin:$PATH"

# Homebrew
if command -v brew >/dev/null 2>&1; then
    eval "$(brew shellenv)"
fi
{{- end }}

{{- if .isLinux }}
# Linux specific configuration
export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"

# Linuxbrew
if [[ -d "/home/linuxbrew/.linuxbrew" ]]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi
{{- end }}

# Node.js version manager
export NVM_DIR="$HOME/.nvm"
[[ -s "$NVM_DIR/nvm.sh" ]] && source "$NVM_DIR/nvm.sh"
[[ -s "$NVM_DIR/bash_completion" ]] && source "$NVM_DIR/bash_completion"

# Rust
[[ -f "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"

# Python virtual environments
export WORKON_HOME="$HOME/.virtualenvs"
[[ -f "/usr/local/bin/virtualenvwrapper.sh" ]] && source "/usr/local/bin/virtualenvwrapper.sh"

# Starship prompt
if command -v starship >/dev/null 2>&1; then
    eval "$(starship init zsh)"
fi

# fzf fuzzy finder
if command -v fzf >/dev/null 2>&1; then
    eval "$(fzf --zsh)"
fi

# Load zoxide if available
if command -v zoxide >/dev/null 2>&1; then
    eval "$(zoxide init zsh)"
fi
